{
  // Configuration for JavaScript files
  "extends": [
    "airbnb-base",
    "next/core-web-vitals", // Needed to avoid warning in next.js build: 'The Next.js plugin was not detected in your ESLint configuration'
    "plugin:prettier/recommended"
  ],
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": [
        "@typescript-eslint",
        "unused-imports",
        "tailwindcss",
        "simple-import-sort"
      ],
      "extends": [
        "plugin:tailwindcss/recommended",
        "airbnb",
        "airbnb-typescript",
        "next/core-web-vitals",
        "plugin:prettier/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "prettier/prettier": "error", // Avoid conflict rule between Prettier and Airbnb Eslint
        "import/extensions": "off", // Avoid missing file extension errors, TypeScript already provides a similar feature
        "react/function-component-definition": "off", // Disable Airbnb's specific function type
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "no-restricted-syntax": [
          "error",
          "ForInStatement",
          "LabeledStatement",
          "WithStatement"
        ], // Overrides Airbnb configuration and enable no-restricted-syntax
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              // Node.js builtins.
              [
                "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
              ],
              // Packages. `react` related packages come first.
              // Also, put `react-icons` in sorting order not with `react`
              ["^react(?!-.)$", "^\\w", "^@\\w"],
              // From the `components` directory.
              ["^components"],
              // From the `config` directory.
              ["^config"],
              // From the `modules` directory.
              ["^modules"],
              // From the `hooks` directory.
              ["^hooks"],
              // From the `lib` directory.
              ["^lib"],
              // From the `styles` directory.
              ["^styles"],
              // Parent imports. Put `..` last.
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Other relative imports. Put same-folder imports and `.` last.
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              // Style imports.
              ["^.+\\.s?css$"],
              // Side effect imports.
              ["^\\u0000"]
            ]
          }
        ], // Import configuration for `eslint-plugin-simple-import-sort`
        "no-console": "off",
        "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
        "import/order": "off", // Avoid conflict rule between `eslint-plugin-import` and `eslint-plugin-simple-import-sort`
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_"
          }
        ],
        "tailwindcss/no-custom-classname": "off"
      }
    },
    // Configuration for TypeScript declaration files
    {
      "files": ["*.d.ts"],
      "rules": {
        "@typescript-eslint/no-import-type-side-effects": "off",
        "@typescript-eslint/no-explicit-any": "off"
      }
    },
    // Configuration for testing
    {
      "files": ["**/?(*.)+(test).{js,jsx,ts,tsx}"],
      "plugins": ["jest", "jest-formatting", "testing-library", "jest-dom"],
      "extends": [
        "plugin:jest/recommended",
        "plugin:jest-formatting/recommended",
        "plugin:testing-library/react",
        "plugin:jest-dom/recommended"
      ]
    },
    {
      "files": ["**/*.js"],
      "rules": {
        "global-require": "off",
        "no-console": "off"
      }
    },
    {
      "files": ["*.config.ts"],
      "rules": {
        "import/no-anonymous-default-export": "off"
      }
    }
  ],
  "rules": {
    "prettier/prettier": "error"
  }
}
